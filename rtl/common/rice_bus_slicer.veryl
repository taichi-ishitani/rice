module rice_bus_slicer #(
  param ADDRESS_WIDTH  : u32  = 32            ,
  param DATA_WIDTH     : u32  = 32            ,
  param STROBE_WIDTH   : u32  = DATA_WIDTH / 2,
  param STAGES         : u32  = 1             ,
  param REQUEST_STAGES : u32  = STAGES        ,
  param RESPONSE_STAGES: u32  = STAGES        ,
  param FULL_BANDWIDTH : bool = true          ,
) (
  i_clk    : input   clock              ,
  i_rst    : input   reset              ,
  slave_if : modport rice_bus_if::slave ,
  master_if: modport rice_bus_if::master,
) {
  struct rice_bus_request {
    write     : logic               ,
    address   : logic<ADDRESS_WIDTH>,
    strobe    : logic<STROBE_WIDTH> ,
    write_data: logic<DATA_WIDTH>   ,
  }

  struct rice_bus_response {
    error    : logic            ,
    read_data: logic<DATA_WIDTH>,
  }

  var request : rice_bus_request<2> ;
  var response: rice_bus_response<2>;

  always_comb {
    request[0].write      = slave_if.write;
    request[0].address    = slave_if.address;
    request[0].strobe     = slave_if.strobe;
    request[0].write_data = slave_if.write_data;
  }

  always_comb {
    master_if.write      = request[1].write;
    master_if.address    = request[1].address;
    master_if.strobe     = request[1].strobe;
    master_if.write_data = request[1].write_data;
  }

  inst u_request_slicer: $std::slicer #(
    TYPE          : rice_bus_request,
    STAGES        : REQUEST_STAGES  ,
    FULL_BANDWIDTH: FULL_BANDWIDTH  ,
  ) (
    i_clk  : i_clk                  ,
    i_rst  : i_rst                  ,
    o_ready: slave_if.request_ready ,
    i_valid: slave_if.request_valid ,
    i_data : request[0]             ,
    i_ready: master_if.request_ready,
    o_valid: master_if.request_valid,
    o_data : request[1]             ,
  );

  always_comb {
    response[0].error     = master_if.error;
    response[0].read_data = master_if.read_data;
  }

  always_comb {
    slave_if.error     = response[1].error;
    slave_if.read_data = response[1].read_data;
  }

  inst u_response_slicer: $std::slicer #(
    TYPE          : rice_bus_response,
    STAGES        : RESPONSE_STAGES  ,
    FULL_BANDWIDTH: FULL_BANDWIDTH   ,
  ) (
    i_clk  : i_clk                   ,
    i_rst  : i_rst                   ,
    o_ready: master_if.response_ready,
    i_valid: master_if.response_valid,
    i_data : response[0]             ,
    i_ready: slave_if.response_ready ,
    o_valid: slave_if.response_valid ,
    o_data : response[1]             ,
  );
}
